{"version":3,"file":"static/js/18.986aa371.chunk.js","mappings":"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","sources":["components/CompoundInterest.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport './CompoundInterest.css';\n\nconst CompoundInterest = () => {\n  const [principal, setPrincipal] = useState(10000);\n  const [rate, setRate] = useState(7);\n  const [time, setTime] = useState(10);\n  const [monthlyContribution, setMonthlyContribution] = useState(200);\n  const [compound, setCompound] = useState('12');\n  const [result, setResult] = useState(null);\n  const [yearlyData, setYearlyData] = useState([]);\n\n  const calculateInterest = useCallback(() => {\n    const p = parseFloat(principal) || 0;\n    const r = parseFloat(rate) / 100;\n    const t = parseFloat(time) || 0;\n    const n = parseFloat(compound) || 12;\n    const m = parseFloat(monthlyContribution) || 0;\n\n    if (p >= 0 && r >= 0 && t > 0 && n > 0) {\n      const yearlyBreakdown = [];\n      let currentAmount = p;\n      let totalContributions = p;\n      \n      // Year 0 (starting point)\n      yearlyBreakdown.push({\n        year: 0,\n        amount: currentAmount,\n        totalContributions,\n        totalInterest: 0,\n        yearlyInterest: 0\n      });\n\n      for (let year = 1; year <= t; year++) {\n        const startingAmount = currentAmount;\n        \n        // Calculate monthly compounding\n        for (let month = 0; month < 12; month++) {\n          currentAmount = currentAmount * (1 + r/n) + m;\n          totalContributions += m;\n        }\n\n        const yearlyInterest = currentAmount - startingAmount - (m * 12);\n        \n        yearlyBreakdown.push({\n          year,\n          amount: currentAmount,\n          totalContributions,\n          totalInterest: currentAmount - totalContributions,\n          yearlyInterest\n        });\n      }\n\n      setYearlyData(yearlyBreakdown);\n      const finalAmount = currentAmount;\n      const totalInterest = finalAmount - totalContributions;\n\n      setResult({\n        finalAmount: finalAmount,\n        totalInterest: totalInterest,\n        totalContributions: totalContributions,\n        principalAmount: p,\n        contributionAmount: totalContributions - p\n      });\n    }\n  }, [principal, rate, time, monthlyContribution, compound]);\n\n  useEffect(() => {\n    calculateInterest();\n  }, [calculateInterest]);\n\n  const pieData = result ? [\n    { name: 'Principal', value: result.principalAmount, color: '#00bfff' },\n    { name: 'Contributions', value: result.contributionAmount, color: '#32cd32' },\n    { name: 'Interest Earned', value: result.totalInterest, color: '#ffdf00' }\n  ] : [];\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n\n\n  return (\n    <div className=\"compound-interest\">\n      <div className=\"ci-header\">\n        <h1>Compound Interest Calculator</h1>\n        <p>See how your money can grow over time with compound interest</p>\n      </div>\n\n      <div className=\"ci-main-content\">\n        {/* Left Panel - Inputs */}\n        <div className=\"ci-inputs-panel\">\n          <div className=\"ci-input-section\">\n            <h2>Investment Details</h2>\n            \n            <div className=\"ci-input-group\">\n              <label htmlFor=\"principal\">Initial Investment</label>\n              <div className=\"ci-input-wrapper\">\n                <span className=\"ci-currency-symbol\">$</span>\n                <input\n                  id=\"principal\"\n                  type=\"number\"\n                  value={principal}\n                  onChange={(e) => setPrincipal(e.target.value)}\n                  min=\"0\"\n                  step=\"100\"\n                />\n              </div>\n            </div>\n\n            <div className=\"ci-input-group\">\n              <label htmlFor=\"monthlyContribution\">Monthly Contribution</label>\n              <div className=\"ci-input-wrapper\">\n                <span className=\"ci-currency-symbol\">$</span>\n                <input\n                  id=\"monthlyContribution\"\n                  type=\"number\"\n                  value={monthlyContribution}\n                  onChange={(e) => setMonthlyContribution(e.target.value)}\n                  min=\"0\"\n                  step=\"50\"\n                />\n              </div>\n            </div>\n\n            <div className=\"ci-input-group\">\n              <label htmlFor=\"rate\">Annual Interest Rate</label>\n              <div className=\"ci-input-wrapper\">\n                <input\n                  id=\"rate\"\n                  type=\"number\"\n                  value={rate}\n                  onChange={(e) => setRate(e.target.value)}\n                  min=\"0\"\n                  max=\"50\"\n                  step=\"0.1\"\n                />\n                <span className=\"ci-percent-symbol\">%</span>\n              </div>\n            </div>\n\n            <div className=\"ci-input-group\">\n              <label htmlFor=\"time\">Investment Time Period</label>\n              <div className=\"ci-input-wrapper\">\n                <input\n                  id=\"time\"\n                  type=\"number\"\n                  value={time}\n                  onChange={(e) => setTime(e.target.value)}\n                  min=\"1\"\n                  max=\"50\"\n                  step=\"1\"\n                />\n                <span className=\"ci-unit-symbol\">years</span>\n              </div>\n            </div>\n\n            <div className=\"ci-input-group\">\n              <label htmlFor=\"compound\">Compound Frequency</label>\n              <select \n                id=\"compound\"\n                value={compound} \n                onChange={(e) => setCompound(e.target.value)}\n              >\n                <option value=\"1\">Annually</option>\n                <option value=\"2\">Semi-Annually</option>\n                <option value=\"4\">Quarterly</option>\n                <option value=\"12\">Monthly</option>\n                <option value=\"365\">Daily</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Right Panel - Results */}\n        <div className=\"ci-results-panel\">\n          {result && (\n            <>\n              <div className=\"ci-summary-cards\">\n                <div className=\"ci-summary-card ci-primary\">\n                  <div className=\"ci-card-header\">\n                    <h3>Final Balance</h3>\n                  </div>\n                  <div className=\"ci-card-value\">\n                    {formatCurrency(result.finalAmount)}\n                  </div>\n                </div>\n\n                <div className=\"ci-summary-card\">\n                  <div className=\"ci-card-header\">\n                    <h3>Total Interest</h3>\n                  </div>\n                  <div className=\"ci-card-value ci-interest\">\n                    {formatCurrency(result.totalInterest)}\n                  </div>\n                </div>\n\n                <div className=\"ci-summary-card\">\n                  <div className=\"ci-card-header\">\n                    <h3>Total Contributions</h3>\n                  </div>\n                  <div className=\"ci-card-value\">\n                    {formatCurrency(result.totalContributions)}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"ci-charts-section\">\n                <div className=\"ci-chart-container\">\n                  <h3>Growth Over Time</h3>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={yearlyData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255,255,255,0.1)\" />\n                      <XAxis \n                        dataKey=\"year\" \n                        stroke=\"#b0b0b0\"\n                        fontSize={12}\n                      />\n                      <YAxis \n                        tickFormatter={formatCurrency}\n                        stroke=\"#b0b0b0\"\n                        fontSize={12}\n                      />\n                      <Tooltip \n                        formatter={(value, name) => [formatCurrency(value), name]}\n                        labelFormatter={(label) => `Year ${label}`}\n                        contentStyle={{\n                          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                          border: '1px solid rgba(0, 191, 255, 0.3)',\n                          borderRadius: '8px',\n                          color: '#e0e0e0'\n                        }}\n                      />\n                      <Legend />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"amount\" \n                        name=\"Total Balance\" \n                        stroke=\"#00bfff\" \n                        strokeWidth={3}\n                        dot={{ r: 4 }}\n                      />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"totalContributions\" \n                        name=\"Total Contributions\" \n                        stroke=\"#32cd32\" \n                        strokeWidth={2}\n                        strokeDasharray=\"5 5\"\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n\n                <div className=\"ci-pie-container\">\n                  <h3>Final Balance Breakdown</h3>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <PieChart>\n                      <Pie\n                        data={pieData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        innerRadius={60}\n                        outerRadius={100}\n                        paddingAngle={5}\n                        dataKey=\"value\"\n                      >\n                        {pieData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip \n                        formatter={(value) => formatCurrency(value)}\n                        contentStyle={{\n                          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                          border: '1px solid rgba(0, 191, 255, 0.3)',\n                          borderRadius: '8px',\n                          color: '#e0e0e0'\n                        }}\n                      />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Bottom Section - Detailed Table */}\n      {result && yearlyData.length > 0 && (\n        <div className=\"ci-table-section\">\n          <h2>Year-by-Year Breakdown</h2>\n          <div className=\"ci-table-container\">\n            <table className=\"ci-table\">\n              <thead>\n                <tr>\n                  <th>Year</th>\n                  <th>Balance</th>\n                  <th>Interest Earned</th>\n                  <th>Total Contributions</th>\n                  <th>Total Interest</th>\n                </tr>\n              </thead>\n              <tbody>\n                {yearlyData.map((data, index) => (\n                  <tr key={data.year} className={index === 0 ? 'ci-starting-row' : ''}>\n                    <td>{data.year}</td>\n                    <td className=\"ci-balance\">{formatCurrency(data.amount)}</td>\n                    <td className=\"ci-interest-earned\">\n                      {data.year === 0 ? '-' : formatCurrency(data.yearlyInterest)}\n                    </td>\n                    <td>{formatCurrency(data.totalContributions)}</td>\n                    <td className=\"ci-total-interest\">{formatCurrency(data.totalInterest)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CompoundInterest; "],"names":["CompoundInterest","principal","setPrincipal","useState","rate","setRate","time","setTime","monthlyContribution","setMonthlyContribution","compound","setCompound","result","setResult","yearlyData","setYearlyData","calculateInterest","useCallback","p","parseFloat","r","t","n","m","yearlyBreakdown","currentAmount","totalContributions","push","year","amount","totalInterest","yearlyInterest","startingAmount","month","finalAmount","principalAmount","contributionAmount","useEffect","pieData","name","value","color","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","_jsxs","className","children","_jsx","htmlFor","id","type","onChange","e","target","min","step","max","_Fragment","ResponsiveContainer","width","height","LineChart","data","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","fontSize","YAxis","tickFormatter","Tooltip","formatter","labelFormatter","label","concat","contentStyle","backgroundColor","border","borderRadius","Legend","Line","strokeWidth","dot","PieChart","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","map","entry","index","Cell","fill","length"],"sourceRoot":""}